// Get a value from a map, or a sub-property, if the value is a map
// @param  $map            The map variable
// @param  $key            The map key, or '_all', to get the map, if the value is a map
// @param  $key-error      The error message, for when the key doesn't exist
// @param  $sub-key        The map key within a value (map)
// @param  $sub-key-error  The error message, for when the key within a value (map) doesn't exist
// @return The value of the map key
@function abstract-map-getter($map, $key, $key-error: null, $sub-key: null, $sub-key-error: null) {
  // Return the map, if needed
  @if $key == '_all' {
    @return $map;
  }

  // Throw an error, if the key doesn't exist
  @if not map-has-key($map, $key) {
    @if $key-error == null {
      @error "The key '#{$key}' doesn't exist in the map";
    } @else {
      @error $key-error;
    }

    @return null;
  }

  // Get the value belonging to the key
  $value: map-get($map, $key);

  // See if the value is a map
  @if type-of($value) == 'map' {
    // Return the sub-value
    @return abstract-map-getter($value, $sub-key, $sub-key-error);
  }

  // Otherwise return the color
  @else {
    @return $value;
  }
}
